{"ast":null,"code":"var _jsxFileName = \"/Users/dkonigiri/Documents/javascript/React/git/beach-resort/src/context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext(); // contains two components (Provider, Consumer)\n// <RoomContext.Provider value={'hello}\n\nclass RoomProvider extends Component {\n  constructor() {\n    super();\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      // const type = event.target.type\n      // const name = event.target.name\n      // const value = event.target.value\n      // console.log(` this is type: ${type}, this is name: ${name},this is value: ${value}`)\n      const target = event.target;\n      const value = event.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      // console.log(\"hello\");\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        minSize,\n        maxSize,\n        breakfast,\n        pets\n      } = this.state; // all the rooms\n\n      let tempRooms = [...rooms]; // transform value\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); // filter by type\n\n      if (type !== 'all') {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } // filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } // filter by price\n\n\n      if (price !== 1) {\n        tempRooms = tempRooms.filter(room => room.price >= capacity);\n      }\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      breakfast: false,\n      pets: false\n    };\n  }\n\n  componentDidMount() {\n    let rooms = this.formatData(items); // console.log(rooms);\n\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 16\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/dkonigiri/Documents/javascript/React/git/beach-resort/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","constructor","getRoom","slug","tempRooms","state","rooms","room","find","handleChange","event","target","value","type","checked","name","setState","filterRooms","capacity","price","minSize","maxSize","breakfast","pets","parseInt","filter","sortedRooms","featuredRooms","loading","minPrice","maxPrice","componentDidMount","formatData","featured","Math","max","map","item","size","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport items from './data'\n\nconst RoomContext = React.createContext() // contains two components (Provider, Consumer)\n// <RoomContext.Provider value={'hello}\n\n\nclass RoomProvider extends Component {\n    constructor() {\n        super()\n        this.state = {\n            rooms: [],\n            sortedRooms: [],\n            featuredRooms: [],\n            loading: true,\n            type: 'all',\n            capacity: 1,\n            price: 0,\n            minPrice: 0,\n            maxPrice: 0,\n            minSize: 0,\n            breakfast: false,\n            pets: false\n        }\n    }\n\n    componentDidMount() {\n        let rooms = this.formatData(items)\n        // console.log(rooms);\n        let featuredRooms = rooms.filter(room => room.featured === true)\n        let maxPrice = Math.max(...rooms.map(item => item.price))\n        let maxSize = Math.max(...rooms.map(item => item.size))\n        this.setState({\n            rooms,\n            featuredRooms,\n            sortedRooms: rooms,\n            loading: false,\n            price: maxPrice,\n            maxPrice,\n            maxSize\n        })\n        \n    }\n\n    formatData(items) {\n        let tempItems = items.map(item => {\n            let id = item.sys.id\n            let images = item.fields.images.map(image => image.fields.file.url)\n            let room = { ...item.fields, images, id }\n            return room\n        })\n        return tempItems\n    }\n\n    getRoom = slug => {\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find(room => room.slug === slug);\n        return room;\n      };\n\n    handleChange = event => {\n        // const type = event.target.type\n        // const name = event.target.name\n        // const value = event.target.value\n        // console.log(` this is type: ${type}, this is name: ${name},this is value: ${value}`)\n\n        const target = event.target\n        const value = event.type === 'checkbox' ? target.checked : target.value\n        const name = event.target.name\n        this.setState({\n            [name]: value\n        }, this.filterRooms)\n    }\n\n    filterRooms = () => {\n        // console.log(\"hello\");\n        let {\n            rooms,\n            type,\n            capacity,\n            price,\n            minSize,\n            maxSize,\n            breakfast,\n            pets\n        } = this.state\n\n        // all the rooms\n        let tempRooms = [...rooms]\n        \n        // transform value\n        capacity = parseInt(capacity)\n        price = parseInt(price)\n\n        // filter by type\n        if(type !== 'all') {\n            tempRooms = tempRooms.filter(room => room.type === type)\n        }\n\n        // filter by capacity\n        if(capacity !== 1) {\n            tempRooms = tempRooms.filter(room => room.capacity >= capacity)\n        }\n\n        // filter by price\n        if(price !== 1) {\n            tempRooms = tempRooms.filter(room => room.price >= capacity)\n        }\n\n        this.setState({\n            sortedRooms: tempRooms\n        })\n    }\n\n    render() {\n        return (\n            <RoomContext.Provider \n                value={{ \n                    ...this.state,\n                    getRoom: this.getRoom,\n                    handleChange: this.handleChange\n                 }}>\n            {this.props.children}\n            </RoomContext.Provider>\n        )\n    }\n}\n\nconst RoomConsumer = RoomContext.Consumer\n\nexport function withRoomConsumer(Component) {\n    return function ConsumerWrapper(props) {\n        return <RoomConsumer>\n            {value => <Component {...props} context={value}/>}\n        </RoomConsumer>\n    }\n}\n\nexport { RoomProvider, RoomConsumer, RoomContext };\n"]},"metadata":{},"sourceType":"module"}